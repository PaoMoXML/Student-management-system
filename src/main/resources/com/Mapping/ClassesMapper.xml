<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Dao.ClassesMapper">
  <resultMap id="BaseResultMap" type="com.Pojo.Classes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classid" jdbcType="VARCHAR" property="classid" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, classid, courseid
  </sql>
  <select id="selectByExample" parameterType="com.Pojo.ClassesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Pojo.ClassesExample">
    delete from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Pojo.Classes">
    insert into classes (id, classid, courseid
      )
    values (#{id,jdbcType=INTEGER}, #{classid,jdbcType=VARCHAR}, #{courseid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Pojo.Classes">
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Pojo.ClassesExample" resultType="java.lang.Long">
    select count(*) from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classes
    set id = #{record.id,jdbcType=INTEGER},
      classid = #{record.classid,jdbcType=VARCHAR},
      courseid = #{record.courseid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Pojo.Classes">
    update classes
    <set>
      <if test="classid != null">
        classid = #{classid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Pojo.Classes">
    update classes
    set classid = #{classid,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectClasses" resultMap="classesMap">
  select * from classes where classid = #{classid}
  </select>
  
  <resultMap type="com.Pojo.Classes" id="classesMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="classid" jdbcType="VARCHAR" property="classid" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
    
    <collection  property = "studentd"  ofType = "com.Pojo.StudentD"
    select = "com.Dao.StudentDMapper.belongClass" column="classid">
     <result property="name" column="name"/>
    </collection >
    
  </resultMap>
  
  
   <select id="selectClasses2" resultMap="classesResultMap3">
  select * from classes c,student_d studentD where c.classid = studentD.classid and c.classid = #{classid}
  </select>
  
  <resultMap type="com.Pojo.Classes" id="classesResultMap3">
  <id property = "id" column="id"/>
  <result property = "courseid" column="courseid"/>
  <result property = "student_d" column="studentD"/>
  <collection property="student_d" column = "id" resultMap="BaseResultMap22">
  	<id property = "id" column = "id"/>
  	<result property = "name" column = "name"/>
  	<result property = "age" column="age"/>
  	<result property = "phone" column="phone"/>
  </collection>
  </resultMap>
  
    <resultMap id="BaseResultMap22" type="com.Pojo.TeacherD">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="teaid" jdbcType="VARCHAR" property="teaid" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  
</mapper>