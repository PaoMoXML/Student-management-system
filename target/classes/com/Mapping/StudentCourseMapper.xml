<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Dao.StudentCourseMapper">
  <resultMap id="BaseResultMap" type="com.Pojo.StudentCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stuid" jdbcType="VARCHAR" property="stuid" />
    <result column="courseid" jdbcType="VARCHAR" property="courseid" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stuid, courseid, grade
  </sql>
  <select id="selectByExample" parameterType="com.Pojo.StudentCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Pojo.StudentCourseExample">
    delete from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Pojo.StudentCourse">
    insert into student_course (id, stuid, courseid, 
      grade)
    values (#{id,jdbcType=INTEGER}, #{stuid,jdbcType=VARCHAR}, #{courseid,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Pojo.StudentCourse">
    insert into student_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuid != null">
        stuid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuid != null">
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Pojo.StudentCourseExample" resultType="java.lang.Long">
    select count(*) from student_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null">
        stuid = #{record.stuid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseid = #{record.courseid,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_course
    set id = #{record.id,jdbcType=INTEGER},
      stuid = #{record.stuid,jdbcType=VARCHAR},
      courseid = #{record.courseid,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Pojo.StudentCourse">
    update student_course
    <set>
      <if test="stuid != null">
        stuid = #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Pojo.StudentCourse">
    update student_course
    set stuid = #{stuid,jdbcType=VARCHAR},
      courseid = #{courseid,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--延迟加载学生的课程 -->
  <select id = "selectAll" resultMap = "selectAllMap">
  
	select * from student_course where stuid = #{stuid}

  </select>
  
  <resultMap type="com.Pojo.StudentCourse" id="selectAllMap">
  <id column="id" property="id"></id>
  <result column="stuid" property="stuid"></result>
  <result column="courseid" property="courseid"/>
  <result column="grade" property="grade"/>
  
  <association property="course" javaType = "com.Pojo.Course"
  select="com.Dao.CourseMapper.selectC" column="courseid">
  </association>
  
  </resultMap>
  
    <!--修改学生成绩 -->
	<update id="updateGrade" parameterType="com.Pojo.StudentCourse">
	update student_course set grade = #{grade} where stuid=#{stuid} and courseid=#{courseid}
	</update>
	
	<!-- 修改学生成绩之前的查询 -->
	<select id="selectGrade" resultType="com.Pojo.StudentCourse">
	select * from student_course where stuid=#{stuid} and courseid=#{courseid}
	</select>
	
	<!-- 检查此课程能否选,是否已经被选 -->
	<select id="check" resultType="com.Pojo.StudentCourse">
	select * from student_course where stuid=#{stuid} and courseid=#{courseid}
	</select>
	
	<!-- 选择课程 插入课程 -->
	<insert id="insertCourse" parameterType="com.Pojo.StudentCourse">
	insert into student_course set stuid = #{stuid} , courseid = #{courseid}
	</insert>
  
  	<!-- 学生删除课程 -->
  	<delete id="delCourse" parameterType="com.Pojo.StudentCourse">
  	delete from student_course where id = #{id}
  	</delete>
</mapper>